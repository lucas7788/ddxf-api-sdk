package meta

import (
	"github.com/ont-bizsuite/ddxf-api-sdk/pkg/io"
)

// IDSign ...
type IDSign struct {
	OntID string
	PK    string
	Sign  string
}

// AddressSign ...
type AddressSign struct {
	PK   string
	Sign string
}

// CreateMetaInput ...
type CreateMetaInput struct {
	// controller ontids for this meta
	OntIDs []string
	// meta info
	Meta map[string]interface{}
	// meta hash of meta, generated by github.com/zhiqiangxu/ddxf.HashObject2Hex
	MetaHash string
}

// ContainsOntID ...
func (input *CreateMetaInput) ContainsOntID(ontID string) bool {
	exists := false
	for _, oid := range input.OntIDs {
		if oid == ontID {
			exists = true
			break
		}
	}
	return exists
}

// CreateMetaOutput ...
// swagger:model CreateMetaOutput
type CreateMetaOutput struct {
	io.BaseResp
	// id for this meta
	MetaID string
}

// UpdateMetaInput ...
type UpdateMetaInput struct {
	// id for this meta
	MetaID string
	// meta info
	Meta map[string]interface{}
	// meta hash of meta, generated by github.com/zhiqiangxu/ddxf.HashObject2Hex
	MetaHash string
}

// UpdateMetaOutput ...
// swagger:model UpdateMetaOutput
type UpdateMetaOutput struct {
	io.BaseResp
}

// DeleteMetaInput ...
type DeleteMetaInput struct {
	// id for this meta
	MetaID string
}

// DeleteMetaOutput ...
// swagger:model DeleteMetaOutput
type DeleteMetaOutput struct {
	io.BaseResp
}

// GetMetaInput ...
type GetMetaInput struct {
	// meta hash of meta
	MetaHash string
}

// GetMetaOutput ...
// swagger:model GetMetaOutput
type GetMetaOutput struct {
	io.BaseResp
	// meta info
	Meta map[string]interface{}
}
